#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ Telegram –∏ PayMaster
"""

import requests
import json
import time
from config import Config

def check_telegram_bot():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞"""
    print("ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞...")
    
    try:
        url = f"https://api.telegram.org/bot{Config.TELEGRAM_BOT_TOKEN}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get("ok"):
                bot_info = data["result"]
                print(f"‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                print(f"   –ò–º—è: {bot_info.get('first_name')}")
                print(f"   Username: @{bot_info.get('username')}")
                print(f"   ID: {bot_info.get('id')}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def check_paymaster():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ PayMaster"""
    print("\nüí≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ PayMaster...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
        payload = {
            "externalId": f"test_{int(time.time())}",
            "amount": {"value": 1, "currency": "RUB"},
            "description": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂",
            "expirationDateTime": int(time.time()) + 3600
        }
        
        response = requests.post(
            Config.PAYMASTER_URL,
            headers={
                "Authorization": f"Bearer {Config.PAYMASTER_TOKEN}",
                "Content-Type": "application/json"
            },
            json=payload,
            timeout=30
        )
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ PayMaster —Ç–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂: {data.get('id')}")
            return True
        elif response.status_code == 401:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω PayMaster")
            return False
        else:
            print(f"‚ö†Ô∏è  PayMaster –æ—Ç–≤–µ—Ç: {response.status_code}")
            print(f"   –î–µ—Ç–∞–ª–∏: {response.text}")
            return True  # –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ PayMaster: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω—ã
    telegram_ok = check_telegram_bot()
    paymaster_ok = check_paymaster()
    
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print(f"   Telegram –±–æ—Ç: {'‚úÖ' if telegram_ok else '‚ùå'}")
    print(f"   PayMaster: {'‚úÖ' if paymaster_ok else '‚ùå'}")
    
    if telegram_ok and paymaster_ok:
        print("\nüéâ –í—Å–µ —Ç–æ–∫–µ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–∫–µ–Ω—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç.")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    main()
